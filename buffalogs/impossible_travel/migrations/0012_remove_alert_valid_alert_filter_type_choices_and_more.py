# Generated by Django 5.1.4 on 2024-12-23 09:16

import django.contrib.postgres.fields
import impossible_travel.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("impossible_travel", "0011_alert_filter_type_alert_is_filtered_and_more"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="alert",
            name="valid_alert_filter_type_choices",
        ),
        migrations.RemoveConstraint(
            model_name="config",
            name="valid_alert_filters_choices",
        ),
        migrations.AddField(
            model_name="config",
            name="ignored_ISPs",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=50),
                blank=True,
                default=impossible_travel.models.get_default_ignored_ISPs,
                help_text="List of ISPs names to remove from the detection",
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="alert",
            name="filter_type",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    blank=True,
                    choices=[
                        (
                            "ignored_users filter",
                            "Alert filtered because the user is ignored - the user is in the Config.ignored_users list or Config.enabled_users list is populated",
                        ),
                        (
                            "ignored_ips filter",
                            "Alert filtered because the IP is ignored - the ip is in the Config.ignored_ips list",
                        ),
                        (
                            "allowed_countries filter",
                            "Alert filtered because the country is whitelisted - the country is in the Config.allowed_countries list",
                        ),
                        (
                            "is_vip_filter",
                            "Alert filtered because the user is not vip - Config.alert_is_vip_only is True and the usre is not in the Config.vip_users list",
                        ),
                        (
                            "alert_minimum_risk_score filter",
                            "Alert filtered because the User.risk_score is lower than the threshold set in Config.alert_minimum_risk_score",
                        ),
                        (
                            "filtered_alerts_types filter",
                            "Alert filtered because this detection type is excluded - the Alert.name detection type is in the Config.filtered_alerts_types list",
                        ),
                        (
                            "ignore_mobile_logins filter",
                            "Alert filtered because the login is from a mobile device - Config.ignore_mobile_logins is True",
                        ),
                        (
                            "ignored_ISPs filter",
                            "Alert filtered because the ISP is whitelisted - The ISP is in the Config.ignored_ISPs list",
                        ),
                    ],
                    max_length=50,
                ),
                blank=True,
                default=list,
                help_text="List of filters that disabled the related alert",
                size=None,
            ),
        ),
        migrations.AddConstraint(
            model_name="alert",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    (
                        "filter_type__contained_by",
                        [
                            (
                                "ignored_users filter",
                                "Alert filtered because the user is ignored - the user is in the Config.ignored_users list or Config.enabled_users list is populated",
                            ),
                            (
                                "ignored_ips filter",
                                "Alert filtered because the IP is ignored - the ip is in the Config.ignored_ips list",
                            ),
                            (
                                "allowed_countries filter",
                                "Alert filtered because the country is whitelisted - the country is in the Config.allowed_countries list",
                            ),
                            (
                                "is_vip_filter",
                                "Alert filtered because the user is not vip - Config.alert_is_vip_only is True and the usre is not in the Config.vip_users list",
                            ),
                            (
                                "alert_minimum_risk_score filter",
                                "Alert filtered because the User.risk_score is lower than the threshold set in Config.alert_minimum_risk_score",
                            ),
                            (
                                "filtered_alerts_types filter",
                                "Alert filtered because this detection type is excluded - the Alert.name detection type is in the Config.filtered_alerts_types list",
                            ),
                            (
                                "ignore_mobile_logins filter",
                                "Alert filtered because the login is from a mobile device - Config.ignore_mobile_logins is True",
                            ),
                            (
                                "ignored_ISPs filter",
                                "Alert filtered because the ISP is whitelisted - The ISP is in the Config.ignored_ISPs list",
                            ),
                        ],
                    )
                ),
                name="valid_alert_filter_type_choices",
            ),
        ),
        migrations.AddConstraint(
            model_name="config",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    (
                        "filtered_alerts_types__contained_by",
                        [
                            (
                                "ignored_users filter",
                                "Alert filtered because the user is ignored - the user is in the Config.ignored_users list or Config.enabled_users list is populated",
                            ),
                            (
                                "ignored_ips filter",
                                "Alert filtered because the IP is ignored - the ip is in the Config.ignored_ips list",
                            ),
                            (
                                "allowed_countries filter",
                                "Alert filtered because the country is whitelisted - the country is in the Config.allowed_countries list",
                            ),
                            (
                                "is_vip_filter",
                                "Alert filtered because the user is not vip - Config.alert_is_vip_only is True and the usre is not in the Config.vip_users list",
                            ),
                            (
                                "alert_minimum_risk_score filter",
                                "Alert filtered because the User.risk_score is lower than the threshold set in Config.alert_minimum_risk_score",
                            ),
                            (
                                "filtered_alerts_types filter",
                                "Alert filtered because this detection type is excluded - the Alert.name detection type is in the Config.filtered_alerts_types list",
                            ),
                            (
                                "ignore_mobile_logins filter",
                                "Alert filtered because the login is from a mobile device - Config.ignore_mobile_logins is True",
                            ),
                            (
                                "ignored_ISPs filter",
                                "Alert filtered because the ISP is whitelisted - The ISP is in the Config.ignored_ISPs list",
                            ),
                        ],
                    )
                ),
                name="valid_alert_filters_choices",
            ),
        ),
    ]
