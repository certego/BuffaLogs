# Generated by Django 5.2.3 on 2025-07-18 10:58

import json
import os
from django.conf import settings
import django.contrib.postgres.fields
import impossible_travel.models
import impossible_travel.validators
from django.db import migrations, models


def get_valid_countries():
    with open(
        os.path.join(settings.CERTEGO_BUFFALOGS_CONFIG_PATH, "buffalogs/countries_list.json"),
        mode="r",
        encoding="utf-8",
    ) as f:
        countries = json.load(f)
    return set(countries.values())


def clean_invalid_countries(apps, schema_editor):
    Config = apps.get_model("impossible_travel", "Config")
    valid_countries = get_valid_countries()
    for config in Config.objects.all():
        if config.allowed_countries:
            cleaned = [c for c in config.allowed_countries if c in valid_countries]
            if cleaned != config.allowed_countries:
                config.allowed_countries = cleaned
                config.save(update_fields=["allowed_countries"])


class Migration(migrations.Migration):

    dependencies = [
        ("impossible_travel", "0015_remove_alert_notified_alert_notified_status"),
    ]

    operations = [
        migrations.RunPython(clean_invalid_countries),
        migrations.AlterField(
            model_name="config",
            name="allowed_countries",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=20),
                blank=True,
                default=impossible_travel.models.get_default_allowed_countries,
                help_text="List of countries to exclude from the detection, because 'trusted' for the customer",
                null=True,
                size=None,
                validators=[impossible_travel.validators.validate_countries_names],
            ),
        ),
    ]
